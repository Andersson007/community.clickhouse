name: 'Run Galaxy Importer'
description: 'Installs dependencies, creates a configuration, and runs the galaxy-importer.'

runs:
  using: "composite"
  steps:
    - name: Install podman
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y podman

    - name: Install Python dependencies
      shell: bash
      run: |
        pip install ansible-core==2.16.0
        pip install ansible-lint==24.12.2
        pip install galaxy-importer==0.4.31

    - name: Create galaxy-importer.cfg
      shell: bash
      run: |
        cat <<EOF > galaxy-importer.cfg
        [galaxy-importer]
        RUN_ANSIBLE_TEST = True
        ANSIBLE_TEST_LOCAL_IMAGE = False
        EOF

    - name: Build collection artifact
      shell: bash
      run: ansible-galaxy collection build

    - name: Run galaxy-importer and check for errors
      shell: bash
      run: |
        ARTIFACT_NAME=$(ls *.tar.gz)
        echo "Running importer on $ARTIFACT_NAME"

        # Run importer, redirecting all output to a file.
        # We add `|| true` so the script doesn't exit if python returns a non-zero code.
        # We want to check the log for "ERROR" ourselves to decide on failure.
        GALAXY_IMPORTER_CONFIG=galaxy-importer.cfg python -m galaxy_importer.main $ARTIFACT_NAME &> output.log || true

        # Show the captured output in the main log
        cat output.log

        # Now, check the file for the error string.
        if grep -q "ERROR" output.log; then
            echo "Found errors in galaxy-importer output. Failing the build."
            exit 1
        fi
