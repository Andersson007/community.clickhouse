####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

- name: Just run something
  register: result
  community.clickhouse.clickhouse_client:
    login_host: localhost
    client_kwargs:
      connect_timeout: 20
    execute: SHOW DATABASES
    execute_kwargs:
      types_check: false

- name: Check result
  ansible.builtin.assert:
    that:
    - result is changed
    - result.result != []

- name: Create dabase
  community.clickhouse.clickhouse_client:
    execute: CREATE DATABASE foo

- name: Create user
  community.clickhouse.clickhouse_client:
    execute: "CREATE USER alice IDENTIFIED WITH sha256_password BY 'my_password'"

- name: Query DB using non-default user & DB to connect to
  register: result
  community.clickhouse.clickhouse_client:
    execute: SELECT version()
    login_host: localhost
    login_user: alice
    login_db: foo
    login_password: my_password

- name: Check result
  ansible.builtin.assert:
    that:
    - result.statistics["processed_rows"] == 1

- name: Create table
  register: result
  community.clickhouse.clickhouse_client:
    execute: CREATE TABLE test_table_1 (x String) ENGINE = Memory

- name: Insert into test table using named args
  register: result
  community.clickhouse.clickhouse_client:
    execute: "INSERT INTO test_table_1 (x) VALUES (%(a)s), (%(b)s), (%(c)s)"
    execute_kwargs:
      params:
        a: one
        b: two
        c: three

- name: Check the result
  ansible.builtin.assert:
    that:
      - result.substituted_query == "INSERT INTO test_table_1 (x) VALUES ('one'), ('two'), ('three')"
      - result.statistics["processed_rows"] == 3

- name: Check rows were inserted into test table 
  register: result
  community.clickhouse.clickhouse_client:
    execute: "SELECT * FROM test_table_1"

- name: Check the result
  ansible.builtin.assert:
    that:
    - result.result == [["one"], ["two"], ["three"]]


- name: The system.users table contain UUID value
  register: result
  community.clickhouse.clickhouse_client:
    execute: SELECT id FROM system.users LIMIT 1

- name: Check the result
  ansible.builtin.assert:
    that:
    - result.result[0] != []


- name: Create table with Decimal and DateTime columns
  community.clickhouse.clickhouse_client:
    execute: CREATE TABLE decimal_datetime (x Decimal(12,4), y DateTime) ENGINE = Memory

- name: Insert Decimal and DateTime
  community.clickhouse.clickhouse_client:
    execute: "INSERT INTO decimal_datetime VALUES ('4.01', '2019-01-01 00:00:00')"

- name: Select Decimal and DateTime
  register: result
  community.clickhouse.clickhouse_client:
    execute: "SELECT * FROM decimal_datetime"

- name: Check the ret vals
  ansible.builtin.assert:
    that:
    - result.result == [[4.01, '2019-01-01T00:00:00']]


- name: Create table with Map column
  community.clickhouse.clickhouse_client:
    execute: CREATE TABLE map (x Map(String, UInt64)) ENGINE = Memory

- name: Insert Map
  community.clickhouse.clickhouse_client:
    execute: "INSERT INTO map VALUES ({'a': 1, 'b': 2})"

- name: Select Map
  register: result
  community.clickhouse.clickhouse_client:
    execute: "SELECT * FROM map"

- name: Check the ret vals
  ansible.builtin.assert:
    that:
    - result.result[0][0]['a'] == 1


- name: Create table with IPv4 and IPv6 columns
  community.clickhouse.clickhouse_client:
    execute: CREATE TABLE ip (v4 IPv4, v6 IPv6) ENGINE = Memory

- name: Insert IPv4 and IPv6
  community.clickhouse.clickhouse_client:
    execute: "INSERT INTO ip VALUES ('192.168.0.1', '001:44c8:129:2632:33:0:252:2')"

- name: Select IPv4 and IPv6
  register: result
  community.clickhouse.clickhouse_client:
    execute: "SELECT * FROM ip"

- name: Check the ret vals
  ansible.builtin.assert:
    that:
    - result.result == [["192.168.0.1", "1:44c8:129:2632:33:0:252:2"]]
